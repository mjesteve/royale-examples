<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<j:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:j="library://ns.apache.org/royale/jewel"
        xmlns:js="library://ns.apache.org/royale/basic"
        xmlns:html="library://ns.apache.org/royale/html"
        xmlns:views="org.apache.royale.examples.views.*"
        initComplete="initCompleteHandler(event)"
        stateChangeComplete="changeState(event)">

  <j:beads>
    <js:SimpleStatesImpl/>
    <js:ViewDataBinding/>
    <!-- <js:ContainerDataBinding/> -->
  </j:beads>

  <j:states>
    <js:State name="joinus"/>
    <js:State name="registerFM"/>
    <js:State name="loggedIn"/>
  </j:states>

  <!-- xmlns:binding="org.apache.royale.binding.*"  xmlns:models="org.apache.royale.examples.model.*"  xmlns:models="org.apache.royale.examples.service.*"

  <fx:Script source="MainBean.as">
  </fx:Script> -->
  <fx:Script>
    <![CDATA[
      import org.apache.royale.jewel.PopUp;
      import org.apache.royale.events.CloseEvent;
      import org.apache.royale.jewel.Button;
      import org.apache.royale.events.MouseEvent;
      import org.apache.royale.collections.ArrayList;
      import org.apache.royale.examples.models.LovModel2;
      import org.apache.royale.examples.events.LovEvent;
      import org.apache.royale.jewel.Snackbar;
      import org.apache.royale.examples.dto.GenericLOV;


      [Bindable] 
      [Inject( source = "lovModel", bind = "true")]     
      public var lovModel:LovModel2;

      public var selectEstatePopup:PopUp;

      [PostConstruct]
      public function setUpCrux():void 
      {
            trace('Inject model crux');
            
            var ar:Array = new Array();
            for(var idx:int = 0; idx<10; idx++)
            {
              var it:GenericLOV = new GenericLOV();
              it.code = idx;
              it.description = "Desc. "+idx.toString();
              ar.push(it);
            }
            lovModel.lovs2 = new ArrayList(ar);

      }

/*
        [Bindable]
        public var genericLovs:ArrayList;

        //example of setter style binding Injection
        [Inject(source="lovController.lovBO._lovs2", bind="true")]
        public function setGenericLovs(val:ArrayList):void
        {
            trace("injected lov array list. hurray !! ");

            this.genericLovs=val;

            trace(" generic lov has been set ! ");
        }
*/

      public function initCompleteHandler(event:Event):void
      {
        trace("Main ResponsiveView is ready !!! ");

        trace(" set initial current state to join us ..");

        currentState='joinus';

        trace("  currentState: " + currentState);

        // loginForm.mainView = mainView;

      }

      public function changeState(event:Event):void
      {
          //actions
          if(currentState == 'joinus')
          {
            trace(' -- sign up -- ');
            //Example launge get...
            //dispatchEvent( new LovEvent(LovEvent.GET_LIST_VALUES,"phoneCountryPrefix") );
            //The correct line is the top . The next line is only a test to verify the mvc-flow and binding.
            dispatchEvent( new LovEvent(LovEvent.GET_LIST_VALUES,"") );
          }
          else if(currentState == 'login')
          {
            trace(' -- sign in -- ');
          }
          else if(currentState == 'registerFM')
          {
            trace(' -- registerFM -- ');
            
          }

      }
        /**
         * Function that handles the GET_LIST_VALUES_RESPONSE event of LovEvent, when fired, we show the user the message received from the backend.
         */
        [EventHandler(event = "LovEvent.GET_LIST_VALUES_RESPONSE",scope="global")]            
        public function getLovComplete(event:LovEvent):void
        {
            Snackbar.show(event.result);
            currentState='registerFM';
        }

      public function signIn(event:Event):void
      {
        currentState='login';
      }

      public function signUp(event:Event):void
      {
        currentState='joinus';
      }

      public function registerFM(event:Event):void
      {
        currentState='registerFM';
      }


      public function selectEstate(event:Event):void
      {
        trace(' -- selectEstate -- ');
        //--  currentState = 'registerFM';

        //estateDialog.show();

        /**
         var alert:Alert = Alert.show("Do you want to <b>save</b> your changes?", "Save Changes", 3);
         alert.addEventListener(CloseEvent.CLOSE, alertClickHandler);
         */

        /*  var selectEstateDialog:SelectEstateDialog = SelectEstateDialog.show(null,'Select Estate'); */

        /* Test Hiedra
        var selectEstateDialog:SelectEstateDialog=new SelectEstateDialog();
        selectEstateDialog.width=490;
        selectEstateDialog.height=392;

        selectEstatePopup=new PopUp();
        selectEstatePopup.content=selectEstateDialog;
        */
        
        /*   var closeButton:Button = new Button();
        closeButton.addEventListener(MouseEvent.CLICK,closeEstateDialog);
        // closeButton
        selectEstatePopup.addElement(closeButton); */

        /* Test Hiedra
        selectEstatePopup.addEventListener(CloseEvent.CLOSE, closePopUpHandler);

        addElement(selectEstatePopup);

        selectEstatePopup.open=true;
        */

      }

      private function closeEstateDialog(event:MouseEvent):void
      {
        trace(" close estate pop up ");

        selectEstatePopup.open=false;
      }

      public function closePopUpHandler(event:Event):void
      {
        //	trace("[closePopUp] ", event.target, popup1.content);
        //  trace("[closePopUp] ", event.target, this.content);


        trace("[closePopUp] ", event.target, selectEstatePopup.content);

        // selectEstatePopup.open = false;
      }
    ]]>
  </fx:Script>


  <!--   <j:VGroup> -->
  <!--   <j:Label text="Hello Jewel + Crux!"/>
  <j:ModuleLoader localId="moduleLoader" modulePath="modules" moduleName="admin"/> -->

  <j:Card x="300"
          y="60"
          height="80%"
          includeIn="joinus">
    <html:H3 text="Join Us !">
    </html:H3>
    <html:H6 text="Welcome to Spacio, to begin this journey, tell us what type of account you opening.">
    </html:H6>
    <j:Button text="Resident">
    </j:Button>
    <j:Button text="Facility Manager"
              click="registerFM(event)">
    </j:Button>
  </j:Card>


  <j:Card x="300"
          y="30"
          height="90%"
          includeIn="registerFM">
    <html:H3 text="Let's Get Started !">
    </html:H3>
    <html:H6 text="For the purpose of industry regulations this details are required.">
    </html:H6>
    <j:Label text="Your Full Name*">
    </j:Label>
    <j:TextInput id="fullName"
                 text="">
    </j:TextInput>
    <j:Label text="Phone Number">
    </j:Label>
    <j:HGroup>
      <j:DropDownList id="phoneCountryPrefix"
                      width="30%"
                      labelField="description"
                      dataProvider="{lovModel.lovs2}">
        <!--  <j:beads>
        <binding:SimpleBinding
        sourceID="lovModel"
        sourcePropertyName="lov2"
        destinationPropertyName="dataProvider"
        eventName="lovsChanged" />
        </j:beads> -->
      </j:DropDownList>
      <j:TextInput id="phoneNo"
                   text="">
      </j:TextInput>
    </j:HGroup>
    <j:Label text="Company Email Address*">
    </j:Label>
    <j:TextInput id="compEmail"
                 text="">
    </j:TextInput>
    <j:Label text="Create Password*">
    </j:Label>
    <j:TextInput id="createPass"
                 text="">
      <j:beads>
        <j:PasswordInput/>
      </j:beads>
    </j:TextInput>
    <j:Label text="Confirm Password*">
    </j:Label>
    <j:TextInput id="confirmPass"
                 text="">
      <j:beads>
        <j:PasswordInput/>
      </j:beads>
    </j:TextInput>
    <j:Label text="Primary Estate/Facility">
    </j:Label>
    <j:DropDownList click="selectEstate(event)">
    </j:DropDownList>
    <j:Button text="Register Account">
    </j:Button>
  </j:Card>


</j:View>
